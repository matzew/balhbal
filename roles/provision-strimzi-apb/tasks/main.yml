- name: Login As Super User
  command: "oc login -u {{ admin_user }} -p {{ admin_password }}"

- name: "Create Cluster Operator Service Account yaml"
  template:
    src: cluster-operator-sa.yml.j2
    dest: /tmp/cluster-operator-sa.yaml

- name: "Create Cluster operator Service Account"
  shell: "oc create -f /tmp/cluster-operator-sa.yaml -n {{ namespace }}"

- name: "Delete Cluster Operator Template File"
  file: path=/tmp/cluster-operator-sa.yaml state=absent

- name: "Create Role"
  shell: "oc create -f https://raw.githubusercontent.com/strimzi/strimzi/{{ STRIMZI_VERSION }}/examples/install/cluster-operator/02-role.yaml -n {{ namespace }}"

- name: "Create Role Based Access Control"
  shell: "oc create -f https://raw.githubusercontent.com/strimzi/strimzi/{{ STRIMZI_VERSION }}/examples/install/cluster-operator/03-role-binding.yaml -n {{ namespace }}"

- name: "Create k8s deployment"
  shell: "oc create -f https://raw.githubusercontent.com/strimzi/strimzi/{{ STRIMZI_VERSION }}/examples/install/cluster-operator/04-deployment.yaml -n {{ namespace }}"

- name: "Create Persistant Storage template"
  shell: "oc create -f https://raw.githubusercontent.com/strimzi/strimzi/{{ STRIMZI_VERSION }}/examples/templates/cluster-operator/persistent-template.yaml -n {{ namespace }}"

- name: "Deploy a ZK and Kafka cluster"
  shell: "oc new-app strimzi-persistent -p CLUSTER_NAME={{ CLUSTER_NAME }} -p ZOOKEEPER_NODE_COUNT={{ ZOOKEEPER_NODE_COUNT }} -p KAFKA_NODE_COUNT={{ KAFKA_NODE_COUNT }} -p ZOOKEEPER_VOLUME_CAPACITY={{ ZOOKEEPER_VOLUME_CAPACITY }} -p KAFKA_VOLUME_CAPACITY={{ KAFKA_VOLUME_CAPACITY }} -p ZOOKEEPER_HEALTHCHECK_DELAY={{ ZOOKEEPER_HEALTHCHECK_DELAY }} -p ZOOKEEPER_HEALTHCHECK_TIMEOUT={{ ZOOKEEPER_HEALTHCHECK_TIMEOUT }} -p KAFKA_HEALTHCHECK_DELAY={{ KAFKA_HEALTHCHECK_DELAY }} -p KAFKA_HEALTHCHECK_TIMEOUT={{ KAFKA_HEALTHCHECK_TIMEOUT }} -p KAFKA_DEFAULT_REPLICATION_FACTOR={{ KAFKA_DEFAULT_REPLICATION_FACTOR }} -p KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR={{ KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR }} -p KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR={{ KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR }} -n {{  namespace }}"

# Check if the required Strimzi pods are all ready
- name: "Wait for Strimzi topic Operator to become ready"
  shell: oc get pods --namespace={{ namespace }} -l 'strimzi.io/name=my-cluster-topic-operator' -o jsonpath='{.items[*].status.containerStatuses[?(@.ready==true)].ready}'| wc -w
  register: strimzi_result
  until: strimzi_result.stdout.find("1") != -1
  retries: 40
  delay: 5
